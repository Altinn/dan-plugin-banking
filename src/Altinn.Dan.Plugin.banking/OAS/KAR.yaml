openapi: 3.0.0
info:
  version: '1.1.2'
  title: 'Kundeforholdregister - API Specification'
  description: |
    This document specifies how govermental institution can retrieve customer relationships and how financial institutions that does not participate in NICS needs to manage customer relationships. 
    
    The interfaces are secured using Maskinporten. Documentation is available here: [https://difi.github.io/felleslosninger/maskinporten_overordnet.html](https://difi.github.io/felleslosninger/maskinporten_overordnet.html)
    
    Change log:
    - v1.1.2: Corrected name of property 'organizationId' to 'organizationID' for getCustomerRelation and getCustomerRelationForOwnBank.
    - v1.1.1: Added 'Legal-Mandate' and 'AccountInfoRequestID' as optional header parameters for '/customers/accountServicingProvider' and '/customers/customerRelationships'.
    - v1.1.0: Added the API '/customers/accountServicingProvider'
    - v1.0.2: Added new endpoint for Maskinporten instead of ID-Porten
    - v1.0.1: Removed binary as format for the type string in CustomerBatch/customers.
    
    Last updated: 18.03.2021
  contact:
    email: 'erik.bergersen@bits.no'
tags:
- name: 'Financial institution'
  description: 'APIs to mange customer relationships for financial institution. These APIs are used by the financial institutions. Requires the scope ''bits:kundeforhold.write'''
- name: 'Govermental institution - Account'
  description: 'APIs to lookup customer relationships for govermental institutions. Requires the scope ''bits:kundeforhold.konto'''
- name: 'Govermental institution - Customer relationship'
  description: 'APIs to lookup customer relationships for govermental institutions. Requires the scope ''bits:kundeforhold'''
paths:
  "/customers/customerRelationships":
    get:
      tags:
      - "Govermental institution - Customer relationship"
      summary: return financial institutions where the given customer has realtions
      operationId: getCustomerRelation
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: bearer ey...
      - in: header
        name: CustomerID
        description: identifier for the customer
        required: true
        schema:
          type: string
          example: 30020012345
      - in: header
        name: CorrelationID
        description: identifier for the request
        required: false
        schema:
          type: string
          format: uuid
          example: 294fafb7-0e4e-4177-a5ff-ce7367c45814
      - in: header
        name: Legal-Mandate
        description: 'The Legal basis used by data consumers in order to fetch data. Optional until further noticer.'
        required: false
        schema:
          type: string
      - in: header
        name: AccountInfoRequestID
        description: 'Unique reference number / case number that follows the case throughout the different requests. Optional until further noticer.'
        required: false
        schema:
          type: string
          format: uuid
      - in: query
        name: fromDate
        description: Parameter to define a period for query. Default value is today’s date. Format is YYYY-MM-DD
        required: false
        schema:
          type: string
          example: 2018-01-01
      - in: query
        name: toDate
        description: Parameter to define a period for query. Default value is today’s date. Format is YYYY-MM-DD
        required: false
        schema:
          type: string
          example: 2019-01-01
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerRelation'
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_period:
                  value:
                    errorCode: "ERR-003"
                    errorMessage: "Ugyldig periode eller datoformat"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_customerid:
                  value:
                    errorCode: "ERR-002"
                    errorMessage: "Ugyldig KUNDEID"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        403:
          description: Client does not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "ERR-001"
                errorMessage: "Klient er ikke autorisert"
                timestamp: "2018-02-05T12:54:12Z"
        405:
          description: Method is not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        406:
          description: Not acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        504:
          description: No response from data source (KAR)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuth: []
  "/customers/accountServicingProvider":
    get:
      tags:
      - "Govermental institution - Account"
      summary: "Returns the financial institution that is servicing the account provided in the request. The API does not perform MOD11 validation of the account number."
      operationId: getAccountServicingProvider
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: "bearer ey..."
      - in: header
        name: AccountID
        description: identifier for the account
        required: true
        schema:
          type: string
          example: "15030012345"
      - in: header
        name: CorrelationID
        description: identifier for the request
        required: true
        schema:
          type: string
          format: uuid
          example: "294fafb7-0e4e-4177-a5ff-ce7367c45814"
      - in: header
        name: Legal-Mandate
        description: 'The Legal basis used by data consumers in order to fetch data. Optional until further noticer.'
        required: false
        schema:
          type: string
      - in: header
        name: AccountInfoRequestID
        description: 'Unique reference number / case number that follows the case throughout the different requests. Optional until further noticer.'
        required: false
        schema:
          type: string
          format: uuid
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_customerid:
                  value:
                    errorCode: "ERR-004"
                    errorMessage: "Ugyldig kontonummer"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuth: []
  '/customers/financialInstitutions/{fid}/relationshipType/{type}':
    post:
      tags:
      - 'Financial institution'
      summary: "Add customer relationships"
      operationId: addCustomerDSOPGW
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: bearer ey...
      - in: path
        name: fid
        description: "Identifier for the financial institution as defined in Brønnøysundregistrene"
        required: true
        schema:
          type: string
          example: '995610760'
      - in: path
        name: type
        description: 'type of customer relationship'
        required: true
        schema:
          type: string
          enum: ["DSOPBANK"]
          example: 'DSOPBANK'
      - in: header
        name: CustomerID
        description: 'identifier for the customer'
        required: true
        schema:
          type: string
          example: '30020012345'
      - in: header
        name: CorrelationID
        description: 'unique identifier for the request'
        required: true
        schema:
          type: string
          format: uuid
          example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
      responses:
        200:
          description: 'successful operation, customer already added'
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
        201:
          description: 'successful operation, customer added to registry'
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
        400:
          description: "Invalid request"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_request:
                  value:
                    errorCode: "KFR-004"
                    errorMessage: "Invalid request"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_customerid:
                  value:
                    errorCode: "KFR-005"
                    errorMessage: "Invalid customer identifier"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_type:
                  value:
                    errorCode: "KFR-009"
                    errorMessage: "Invalid customer relationship type"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-001"
                errorMessage: "Client is not authenticated"
                timestamp: "2018-02-05T12:54:12Z"
        403:
          description: "Client does not have access"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_access:
                  value:
                    errorCode: "KFR-002"
                    errorMessage: "Client does not have access"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_fid:
                  value:
                    errorCode: "KFR-003"
                    errorMessage: "Client cannot manage customer relationships for the given organisation number"
                    timestamp: "2018-02-05T12:54:12Z"
        500:
          description: "Internal error"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-007"
                errorMessage: "Internal error"
                timestamp: "2018-02-05T12:54:12Z"
      security:
      - bearerAuth: []
    delete:
      tags:
      - 'Financial institution'
      summary: "Remove customer relationships"
      operationId: deleteCustomerDSOPGW
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: bearer ey...
      - in: path
        name: fid
        description: "Identifier for the financial institution as defined in Brønnøysundregistrene"
        required: true
        schema:
          type: string
          example: '995610760'
      - in: path
        name: type
        description: 'type of customer relationship'
        required: true
        schema:
          type: string
          enum: ["DSOPBANK"]
          example: 'DSOPBANK'
      - in: header
        name: CustomerID
        description: 'identifier for the customer'
        required: true
        schema:
          type: string
          example: '30020012345'
      - in: header
        name: CorrelationID
        description: 'unique identifier for the request'
        required: true
        schema:
          type: string
          format: uuid
          example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
      responses:
        204:
          description: 'successful operation, customer is deleted'
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
        400:
          description: "Invalid request"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_request:
                  value:
                    errorCode: "KFR-004"
                    errorMessage: "Invalid request"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_customerid:
                  value:
                    errorCode: "KFR-005"
                    errorMessage: "Invalid customer identifier"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_type:
                  value:
                    errorCode: "KFR-009"
                    errorMessage: "Invalid customer relationship type"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-001"
                errorMessage: "Client is not authenticated"
                timestamp: "2018-02-05T12:54:12Z"
        403:
          description: "Client does not have access"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_access:
                  value:
                    errorCode: "KFR-002"
                    errorMessage: "Client does not have access"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_fid:
                  value:
                    errorCode: "KFR-003"
                    errorMessage: "Client cannot manage customer relationships for the given organisation number"
                    timestamp: "2018-02-05T12:54:12Z"
        404:
          description: "Customer relationship not found"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-008"
                errorMessage: "Customer relationship not found"
                timestamp: "2018-02-05T12:54:12Z"
                    
        500:
          description: "Internal error"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-007"
                errorMessage: "Internal error"
                timestamp: "2018-02-05T12:54:12Z"
      security:
      - bearerAuth: []
  '/customers/financialInstitutions/{fid}/batch':
    post:
      tags:
      - 'Financial institution'
      summary: "Add customer relationships"
      operationId: addCustomerDSOPGWByFile
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: bearer ey...
      - in: path
        name: fid
        description: "Identifier for the financial institution as defined in Brønnøysundregistrene"
        required: true
        schema:
          type: string
          example: '995610760'
      - in: header
        name: CorrelationID
        description: 'unique identifier for the request'
        required: true
        schema:
          type: string
          format: uuid
          example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBatch'
      responses:
        201:
          description: 'successful operation, customer added to registry'
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
        400:
          description: "Invalid request"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_request:
                  value:
                    errorCode: "KFR-004"
                    errorMessage: "Invalid request"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_customerid:
                  value:
                    errorCode: "KFR-005"
                    errorMessage: "Invalid customer identifier"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_type:
                  value:
                    errorCode: "KFR-009"
                    errorMessage: "Invalid customer relationship type"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_period:
                  value:
                    errorCode: "KFR-010"
                    errorMessage: "Invalid date format"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-001"
                errorMessage: "Client is not authenticated"
                timestamp: "2018-02-05T12:54:12Z"
        403:
          description: "Client does not have access"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                no_access:
                  value:
                    errorCode: "KFR-002"
                    errorMessage: "Client does not have access"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_fid:
                  value:
                    errorCode: "KFR-003"
                    errorMessage: "Client cannot manage customer relationships for the given organisation number"
                    timestamp: "2018-02-05T12:54:12Z"
        500:
          description: "Internal error"
          headers:
            CorrelationID:
              schema:
                type: string
                format: uuid
                example: '294fafb7-0e4e-4177-a5ff-ce7367c45814'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "KFR-007"
                errorMessage: "Internal error"
                timestamp: "2018-02-05T12:54:12Z"
      security:
      - bearerAuth: []
  "/customers/financialInstitutions/{fid}/":
    get:
      tags:
      - 'Financial institution'
      summary: Returns own financial institutions if a customer relationship exist
      operationId: getCustomerRelationForOwnBank
      parameters:
      - in: header
        name: Authorization
        description: access token provided by Maskinporten
        required: true
        schema:
          type: string
          example: bearer ey...
      - in: path
        name: fid
        description: "Identifier for the financial institution as defined in Brønnøysundregistrene"
        required: true
        schema:
          type: string
          example: '995610760'
      - in: header
        name: CustomerID
        description: identifier for the customer
        required: true
        schema:
          type: string
          example: 30020012345
      - in: header
        name: CorrelationID
        description: identifier for the request
        required: false
        schema:
          type: string
          format: uuid
          example: 294fafb7-0e4e-4177-a5ff-ce7367c45814
      - in: query
        name: fromDate
        description: Parameter to define a period for query. Default value is today’s date. Format is YYYY-MM-DD
        required: false
        schema:
          type: string
          example: 2018-01-01
      - in: query
        name: toDate
        description: Parameter to define a period for query. Default value is today’s date. Format is YYYY-MM-DD
        required: false
        schema:
          type: string
          example: 2019-01-01
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomerRelation'
        400:
          description: invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_period:
                  value:
                    errorCode: "ERR-003"
                    errorMessage: "Ugyldig periode eller datoformat"
                    timestamp: "2018-02-05T12:54:12Z"
                invalid_customerid:
                  value:
                    errorCode: "ERR-002"
                    errorMessage: "Ugyldig KUNDEID"
                    timestamp: "2018-02-05T12:54:12Z"
        401:
          description: "Client is not authenticated"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "ERR-001"
                errorMessage: "Klient er ikke autorisert"
                timestamp: "2018-02-05T12:54:12Z"
        403:
          description: Client does not have access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                errorCode: "ERR-001"
                errorMessage: "Klient er ikke autorisert"
                timestamp: "2018-02-05T12:54:12Z"
        405:
          description: Method is not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Internal error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      security:
      - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Bank:
      type: object
      required:
      - organizationId
      - bankName
      properties:
        organizationId:
          type: string
          example: "920426530"
          minLength: 9
          maxLength: 9
        bankName:
          type: string
          example: "SPAREBANK 1 ØSTLANDET"
    CustomerBatch:
      type: object
      required:
      - customer_type
      - customers
      properties:
        customer_type:
          type: string
          description: 'type of customer relationship'
          enum: ["DSOPBANK"]
          example: 'DSOPBANK'
        customers:
          type: string
          example: "30020012345,123456789,600200123456"
          description: |
            CSV-file including all customer identifiers as SSN, D-number or organisation identifier. Each element is separated by comma and each identifier has a length of 9 (organisation identifier) or 11 digits (SSN and D-number).
            
            A start date for the customer relationship may be included by adding the start date after a #-sign for each customer entry. If start date is omitted, the default value will be today's date. Example: CUSTOMERID#YYYY-MM-DD => 999888777#2019-11-08. 
            
            A batch example can be found here: [https://bitsnorge.github.io/dsop-documentation/dsop_kundeforholdsregister_faq.html#eksempel-batch](https://bitsnorge.github.io/dsop-documentation/dsop_kundeforholdsregister_faq.html#eksempel-batch)
    CustomerRelation:
      type: object
      required:
      - organizationID
      - bankName
      - activeAccount
      properties:
        organizationID:
          type: string
          example: "920426530"
          minLength: 9
          maxLength: 9
        bankName:
          type: string
          example: "SPAREBANK 1 ØSTLANDET"
        activeAccount:
          type: boolean
          example: false
    ListCustomerRelation:
      type: object
      required:
      - banks
      properties:
        banks:
          type: array
          items: 
            $ref: '#/components/schemas/CustomerRelation'
    ErrorResponse:
      type: object
      required:
      - errorCode
      - errorMessage
      - timestamp
      properties:
        errorCode:
          type: string
        errorMessage:
          type: string
        timestamp:
          type: string
          format: date-time
    ErrorResponse401:
      type: object
      required:
      - statusCode
      - message
      properties:
        statusCode:
          type: number
          example: 401
        message:
          type: string
          example: "Unauthorized. Access token is missing or invalid"
servers:
  - description: DSOP Gateway implementation
    url: https://{environment}.bits.no/kar-ws/api/v1
    variables:
      environment:
        default: preprod.api
        enum:
        - preprod.api
        - api